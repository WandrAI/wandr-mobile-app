---
description: 
globs: 
alwaysApply: false
---
# Tamagui Implementation Guide

## Component Usage Patterns

### Primary Components (Always Use)
- `StyledText` - For all text elements with type variants (title, subtitle, caption, etc.)
- `StyledView` - For all containers with variant support (card, surface, transparent)
- `StyledButton` - For all button interactions (re-exports Tamagui Button)

### Tamagui Native Components (When Needed)
- `XStack` / `YStack` - For layout with spacing (`space="$4"`)
- `ScrollView` - For scrollable content
- `Card` - For complex card layouts with headers/footers
- `AnimatePresence` - For animations and transitions

### React Native Fallbacks (Limited Use)
- `IconSymbol` - For cross-platform icons only
- `TabBarBackground` - For platform-specific blur effects only
- Avoid mixing React Native components with Tamagui

## Design Token Usage

### Spacing
Use Tamagui spacing tokens: `$1`, `$2`, `$3`, `$4`, `$5`, `$6`, `$7`, `$8`
```typescript
<StyledView padding="$4" margin="$2" />
<YStack space="$3" />
```

### Colors
Use semantic color tokens:
```typescript
<StyledText color="$blue10">Primary action</StyledText>
<StyledView backgroundColor="$background" borderColor="$borderColor" />
```

### Travel Theme Integration
Always use travel theme hooks:
```typescript
const theme = useTravelTheme();
const { isMobile, padding } = useResponsive();

// Use theme.booking, theme.exploration, theme.social for travel actions
```

## Component Patterns

### Text Styling
```typescript
// ✅ Good: Use type variants
<StyledText type="title">Main Heading</StyledText>
<StyledText type="subtitle">Section Header</StyledText>
<StyledText variant="muted">Secondary info</StyledText>

// ❌ Avoid: Custom style overrides
<StyledText style={{ fontSize: 20, fontWeight: 'bold' }}>Title</StyledText>
```

### Layout Patterns
```typescript
// ✅ Good: Use Tamagui layout stacks
<YStack space="$4" padding="$4">
  <XStack justifyContent="space-between" alignItems="center">
    <StyledText>Left content</StyledText>
    <StyledButton>Right action</StyledButton>
  </XStack>
</YStack>

// ❌ Avoid: Manual flexbox styling
<StyledView style={{ flexDirection: 'row', justifyContent: 'space-between' }}>
```

### Button Styling
```typescript
// ✅ Good: Use Tamagui button themes
<StyledButton theme="blue" size="$4">Standard Button</StyledButton>

// ✅ Good: Custom styling with chromeless
<StyledButton 
  chromeless 
  style={styles.custom}
  pressStyle={{ opacity: 0.8, scale: 0.98 }}
>
  <StyledText>Custom Button</StyledText>
</StyledButton>

// ❌ Avoid: TouchableOpacity with Tamagui components
```

## Travel App Specific Guidelines

### Responsive Design
Always use responsive hooks:
```typescript
const { isMobile, columns, padding } = useResponsive();
<StyledView padding={padding} />
```

### Screen Layout Pattern
```typescript
<ScrollView contentInsetAdjustmentBehavior="automatic">
  <StyledView padding="$4">
    <StyledText type="title">Screen Title</StyledText>
    {/* Content */}
  </StyledView>
</ScrollView>
```

### Travel Card Pattern
```typescript
<Card elevate size="$4" margin="$2">
  <Card.Header>
    <YStack space="$2">
      <StyledText type="subtitle">{destination}</StyledText>
      <XStack justifyContent="space-between">
        <StyledText variant="muted">Rating</StyledText>
        <StyledText color="$green10">Price</StyledText>
      </XStack>
    </YStack>
  </Card.Header>
</Card>
```

## Reference Files
@docs/conventions/tamagui-implementation-guide.md
@components/atoms/StyledText/StyledText.tsx
@components/atoms/StyledView/StyledView.tsx
@hooks/useTravelTheme.ts
@hooks/useResponsive.ts
